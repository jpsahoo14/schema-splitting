type Query {
  Tweet(id: ID!): Tweet
  Tweets(limit: Int, skip: Int, sort_field: String, sort_order: String): [Tweet]
  User(id: ID!): User
  Notifications(limit: Int): [Notification]
  NotificationsMeta: Meta
}

type Tweet {
  id: ID!
  body: String
  date: Date
  Author: User
  Stats: Stat
}

scalar Date

type User {
  id: ID!
  username: String
  first_name: String
  last_name: String
  full_name: String
  name: String @deprecated
  avatar_url: Url
  media: Media
}

scalar Url

union Media = Book | Movie

type Book {
  id: Int!
  name: String
}

type Movie {
  id: Int
  name: String
}

type Stat {
  views: Int
  likes: Int
  retweets: Int
  responses: Int
}

type Notification {
  id: ID
  date: Date
  type: String
}

type Meta {
  count: Int
}
